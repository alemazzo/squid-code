name: squidcode-backend@release

on:
  workflow_run:
    workflows: ["squidcode-backend@build"]
    types:
      - completed

env:
  path: services/squidcode-backend/application
  registry: registry.digitalocean.com
  image: alessandromazzoli/squidcode-backend
  platforms: linux/amd64
        
jobs:
  release:
    runs-on: ubuntu-latest
    if: >-
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'push' &&
      github.event.workflow_run.head_branch == 'main'

    steps:

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Prepare Dockerfile & Context
        working-directory: ${{ env.path }}
        run: |
          ./gradlew dockerfile
          ./gradlew buildLayers
          
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.path }}/build/docker/main
          file: ${{ env.path }}/build/docker/main/Dockerfile
          platforms: ${{ env.platforms }}
          push: true
          tags: ${{ env.image }}:latest

      - name: Prepare Dockerfile & Context (Native)
        working-directory: ${{ env.path }}
        if: false
        run: |
          ./gradlew dockerfileNative
          ./gradlew buildNativeLayersTask
          ./gradlew dockerPrepareContext

      - name: Build and Push Docker Image (Native)
        uses: docker/build-push-action@v4
        if: false
        with:
          context: ${{ env.path }}/build/docker/native-main
          file: ${{ env.path }}/build/docker/native-main/DockerfileNative
          platforms: ${{ env.platforms }}
          push: true
          tags: ${{ env.registry }}/${{ env.image }}:latest