name: leetcode-service

on:
  push:
    paths:
      - services/leetcode-service/application/**
  pull_request:
    paths:
      - services/leetcode-service/application/**

env:
  install: 'npm install'
  applicationPath: services/leetcode-service/application
  registry: registry.digitalocean.com
  image: alessandromazzoli/squidcode-leetcode
  platforms: linux/amd64
  kubernetesPath: services/leetcode-service/infrastructure/kubernetes

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 22  

      - name: Install dependencies and build
        working-directory: ${{ env.applicationPath }}
        run: |
          ${{ env.install }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: >-
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'

    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: setup-node
        uses: actions/setup-node@v6
        with:
          node-version: 22 

      - name: setup-install
        working-directory: ${{ env.applicationPath }}
        run: |
          ${{ env.install }}
      
      - name: setup-qemu
        uses: docker/setup-qemu-action@v3
  
      - name: setup-buildx
        uses: docker/setup-buildx-action@v3

      - name: setup-doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: setup-doctl-registry
        run: doctl registry login --expiry-seconds 1200
      
      - name: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.applicationPath }}
          file: ${{ env.applicationPath }}/Dockerfile
          platforms: ${{ env.platforms }}
          push: true
          tags: ${{ env.registry }}/${{ env.image }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: >-
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'
      
    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: setup-doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: setup-kubeconfig
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: deploy
        run: kubectl replace --force -f $GITHUB_WORKSPACE/${{ env.kubernetesPath }}/ --recursive

      - name: verify
        run: kubectl rollout status deployment