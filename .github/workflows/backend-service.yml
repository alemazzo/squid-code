name: backend-service

on:
  push:
    paths:
      - services/backend-service/application/**
  pull_request:
    paths:
      - services/backend-service/application/**

env:
  applicationPath: services/backend-service/application
  build: ./gradlew build
  test: ./gradlew test
  registry: registry.digitalocean.com
  image: alessandromazzoli/squidcode-backend
  platforms: linux/amd64
  kubernetesPath: services/backend-service/infrastructure/kubernetes

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v5

      - name: setup-java
        uses: actions/setup-java@v5
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: setup-gradle
        uses: gradle/actions/setup-gradle@v5

      - name: build
        working-directory: ${{ env.applicationPath }}
        run: '${{ env.build }}'

      - name: test
        working-directory: ${{ env.applicationPath }}
        run: '${{ env.test }}'

  release:
    runs-on: ubuntu-latest
    needs: build
    if: >-
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'

    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: setup-java
        uses: actions/setup-java@v5
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: setup-gradle
        uses: gradle/actions/setup-gradle@v5

      - name: setup-qemu
        uses: docker/setup-qemu-action@v3

      - name: setup-buildx
        uses: docker/setup-buildx-action@v3
      
      - name: setup-doct
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: setup-doct-registry
        run: doctl registry login --expiry-seconds 1200

      - name: setup-docker
        working-directory: ${{ env.applicationPath }}
        run: |
          ./gradlew dockerfile
          ./gradlew buildLayers
          
      - name: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.applicationPath }}/build/docker/main
          file: ${{ env.applicationPath }}/build/docker/main/Dockerfile
          platforms: ${{ env.platforms }}
          push: true
          tags: ${{ env.registry }}/${{ env.image }}:latest

      - name: setup-docker-native
        working-directory: ${{ env.applicationPath }}
        if: false
        run: |
          ./gradlew dockerfileNative
          ./gradlew buildNativeLayersTask
          ./gradlew dockerPrepareContext

      - name: build-and-push-native
        uses: docker/build-push-action@v6
        if: false
        with:
          context: ${{ env.applicationPath }}/build/docker/native-main
          file: ${{ env.applicationPath }}/build/docker/native-main/DockerfileNative
          platforms: ${{ env.platforms }}
          push: true
          tags: ${{ env.registry }}/${{ env.image }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: >-
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'

    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: setup-doct
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: setup-kubeconfig
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: deploy
        run: kubectl replace --force -f $GITHUB_WORKSPACE/${{ env.kubernetesPath }}/ --recursive

      - name: verify
        run: kubectl rollout status deployment