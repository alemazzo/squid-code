name: frontend

env:
  install: 'npm install'
  build: 'npm run build'
  path: services/squidcode-frontend
  image: alessandromazzoli/squidcode-frontend
  platforms: linux/amd64

on:
  push:
    paths:
      - services/squidcode-frontend/**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Use a Node.js version supported by your Svelte app

      # Step 3: Install dependencies and build the app
      - name: Install dependencies and build
        working-directory: ${{ env.path }}
        run: |
          ${{ env.install }}
          ${{ env.build }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: >-
      success() &&
      github.event_name == 'push' && 
      github.ref == 'refs/heads/main'

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Use a Node.js version supported by your Svelte app

      # Step 3: Install dependencies and build the app
      - name: Install dependencies and build
        working-directory: ${{ env.path }}
        run: |
          ${{ env.install }}
          ${{ env.build }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.path }}
          file: ${{ env.path }}/Dockerfile
          platforms: ${{ env.platforms }}
          push: true
          tags: ${{ env.image }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: >-
      success() &&
      github.event_name == 'push' && 
      github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl replace --force -f $GITHUB_WORKSPACE/${{ env.path }}/kubernetes/ --recursive

      - name: Verify deployment
        run: kubectl rollout status deployment